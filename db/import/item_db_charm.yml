# This file is a part of rAthena.
#   Copyright(C) 2021 rAthena Development Team
#   https://rathena.org - https://github.com/rathena
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
###########################################################################
# Item Database
###########################################################################
#
# Item Settings
#
###########################################################################
# - Id                      Item ID.
#   AegisName               Server name to reference the item in scripts and lookups, should use no spaces.
#   Name                    Name in English for displaying as output.
#   Type                    Item type. (Default: Etc)
#   SubType                 Weapon, Ammo or Card type. (Default: 0)
#   Buy                     Buying price. When not specified, becomes double the sell price. (Default: 0)
#   Sell                    Selling price. When not specified, becomes half the buy price. (Default: 0)
#   Weight                  Item weight. Each 10 is 1 weight. (Default: 0)
#   Attack                  Weapon's attack. (Default: 0)
#   MagicAttack             Weapon's magic attack. (Default: 0)
#   Defense                 Armor's defense. (Default: 0)
#   Range                   Weapon's attack range. (Default: 0)
#   Slots                   Available slots in item. (Default: 0)
#   Jobs                    Jobs that can equip the item. (Map default is 'All: true')
#   Classes                 Upper class types that can equip the item. (Map default is 'All: true')
#   Gender                  Gender that can equip the item. (Default: Both)
#   Locations               Equipment's placement. (Default: None)
#   WeaponLevel             Weapon level. (Default: 1 for Weapons)
#   ArmorLevel              Armor level. (Default: 1 for Armors)
#   EquipLevelMin           Minimum required level to equip. (Default: 0)
#   EquipLevelMax           Maximum level that can equip. (Default: 0)
#   Refineable              If the item can be refined. (Default: false)
#   Gradable                If the item can be graded. (Default: false)
#   View                    View sprite of an item. (Default: 0)
#   AliasName               Another item's AegisName that will be sent to the client instead of this item's AegisName. (Default: null)
#   Flags:                  Item flags. (Default: null)
#     BuyingStore           If the item is available for Buyingstores. (Default: false)
#     DeadBranch            If the item is a Dead Branch. (Default: false)
#     Container             If the item is part of a container. (Default: false)
#     UniqueId              If the item is a unique stack. (Default: false)
#     BindOnEquip           If the item is bound to the character upon equipping. (Default: false)
#     DropAnnounce          If the item has a special announcement to self on drop. (Default: false)
#     NoConsume             If the item is consumed on use. (Default: false)
#     DropEffect            If the item has a special effect on the ground when dropped by a monster. (Default: None)
#   Delay:                  Item use delay. (Default: null)
#     Duration              Duration of delay in seconds.
#     Status                Status Change used to track delay. (Default: None)
#   Stack:                  Item stack amount. (Default: null)
#     Amount                Maximum amount that can be stacked.
#     Inventory             If the stack is applied to player's inventory. (Default: true)
#     Cart                  If the stack is applied to the player's cart. (Default: false)
#     Storage               If the stack is applied to the player's storage. (Default: false)
#     GuildStorage          If the stack is applied to the player's guild storage. (Default: false)
#   NoUse:                  Conditions when the item is unusable. (Default: null)
#     Override              Group level to override these conditions. (Default: 100)
#     Sitting               If the item can not be used while sitting. (Default: false)
#   Trade:                  Trade restrictions. (Default: null)
#     Override              Group level to override these conditions. (Default: 100)
#     NoDrop                If the item can not be dropped. (Default: false)
#     NoTrade               If the item can not be traded. (Default: false)
#     TradePartner          If the item can not be traded to the player's partner. (Default: false)
#     NoSell                If the item can not be sold. (Default: false)
#     NoCart                If the item can not be put in a cart. (Default: false)
#     NoStorage             If the item can not be put in a storage. (Default: false)
#     NoGuildStorage        If the item can not be put in a guild storage. (Default: false)
#     NoMail                If the item can not be put in a mail. (Default: false)
#     NoAuction             If the item can not be put in an auction. (Default: false)
#   Script                  Script to execute when the item is used/equipped. (Default: null)
#   EquipScript             Script to execute when the item is equipped. (Default: null)
#   UnEquipScript           Script to execute when the item is unequipped or when a rental item expires. (Default: null)
###########################################################################

Header:
  Type: ITEM_DB
  Version: 3

Body:
  - Id: 1999901
    AegisName: Fucking_Heavy_Bag
    Name: Fucking Heavy Bag
    Type: Charm
    Trade:
      NoDrop: true
      NoTrade: true
      NoCart: true
      NoStorage: true
      NoGuildStorage: true
      NoMail: true
    Script: |
      bonus bSpeedaddrate,-300;
      bonus bAspd,-999;
      bonus bAtkrate,-99;
      bonus bMatkrate,-99;
  - Id: 1999902
    AegisName: Icecastle_Symbol
    Name: Ice Castle Symbol
    Type: Charm
    Trade:
      NoDrop: true
      NoTrade: true
      NoCart: true
      NoStorage: true
      NoGuildStorage: true
      NoMail: true
    Script: |
      .@r = getcharmrefine(1999902);
      setarray .@stats,readparam(bStr),readparam(bAgi),readparam(bInt),readparam(bVit),readparam(bDex),readparam(bLuk);
      switch(inarray(.@stats,max(.@stats))){
        case 0:
          bonus bStr,.@r*2;
          break;
        case 1:
          bonus bAgi,.@r*2;
          break;
        case 2:
          bonus bInt,.@r*2;
          break;
        case 3:
          bonus bVit,.@r*2;
          break;
        case 4:
          bonus bDex,.@r*2;
          break;
        case 5:
          bonus bLuk,.@r*2;
          break;
        default:
          break;
      }
  - Id: 1999941
    AegisName: Master_of_Luck_Collection1
    Name: Master of Luck Collection 1
    Type: Charm
    Trade:
      NoDrop: true
      NoTrade: true
      NoCart: true
      NoGuildStorage: true
      NoMail: true
    CollectionScript: |
      bonus2 bDropAddClass,Class_All,5;
  - Id: 1999942
    AegisName: Master_of_Luck_Collection2
    Name: Master of Luck Collection 2
    Type: Charm
    Trade:
      NoDrop: true
      NoTrade: true
      NoCart: true
      NoGuildStorage: true
      NoMail: true
    CollectionScript: |
      bonus2 bDropAddClass,Class_All,10;